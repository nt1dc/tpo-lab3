// Generated by Selenium IDE

import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;

public class AppleTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        WebDriverManager.firefoxdriver().setup();
        String browserfortests = System.getenv("browserfortests");
        if (Objects.equals(browserfortests, "chrome")) {
            System.setProperty("webdriver.chrome.driver", "chromedriver-win32/chromedriver.exe");
            driver = new ChromeDriver();
        } else if (Objects.equals(browserfortests, "fireFox")) {
            FirefoxOptions options = new FirefoxOptions();
            options.setBinary("c:/Users/nt1dc/AppData/Local/Mozilla Firefox/firefox.exe");
            driver = new FirefoxDriver(options);
        } else throw new RuntimeException("invalidBrowser");
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void addMacBookToShoppingCard() {
        driver.get("https://www.apple.com/shop/buy-mac/macbook-air/13-inch-space-gray-apple-m1-chip-with-8-core-cpu-and-7-core-gpu-256gb");
        driver.manage().window().setSize(new Dimension(1536, 816));
        driver.findElement(By.name("add-to-cart")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30));
            wait.until(ExpectedConditions.textToBe(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]"), "1"));
        }
        assertThat(driver.findElement(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]")).getText(), is("1"));
        driver.findElement(By.name("proceed")).click();
        {
            List<WebElement> elements = driver.findElements(By.linkText("13-inch MacBook Air with M1 chip - Space Gray"));
            assert (elements.size() > 0);
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).clickAndHold().perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).release().perform();
        }
        driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).click();
        driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).click();
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$999.00"));
        driver.findElement(By.xpath("//div[4]/div[2]/div/div[2]/div/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-bag-header"), "Your bag is empty."));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-bag-header")).getText(), is("Your bag is empty."));
    }


    @Test
    public void addMacBootToShoppingCardAddAppleCare() {
        driver.get("https://www.apple.com/shop/buy-mac/macbook-air/13-inch-space-gray-apple-m1-chip-with-8-core-cpu-and-7-core-gpu-256gb");
        driver.manage().window().setSize(new Dimension(1536, 816));
        driver.findElement(By.name("add-to-cart")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]"), "1"));
        }
        assertThat(driver.findElement(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]")).getText(), is("1"));
        driver.findElement(By.name("proceed")).click();
        {
            List<WebElement> elements = driver.findElements(By.linkText("13-inch MacBook Air with M1 chip - Space Gray"));
            assert (elements.size() > 0);
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).clickAndHold().perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).release().perform();
        }
        driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).click();
        driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).click();
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$999.00"));
        driver.findElement(By.xpath("//div[2]/div[2]/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-summary-total > .rs-summary-value"), "$1,178.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$1,178.00"));
        driver.findElement(By.xpath("//div[@id=\'bag-content\']/ol/li/div/div[2]/div[2]/div/div/div/div/div[2]/div[4]/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-summary-total > .rs-summary-value"), "$999.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$999.00"));
        driver.findElement(By.xpath("//div[4]/div[2]/div/div[2]/div/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-bag-header"), "Your bag is empty."));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-bag-header")).getText(), is("Your bag is empty."));
    }

    @Test
    public void macBookPageConfigurationChange() throws InterruptedException {
        // Test name: someTest
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://www.apple.com/");
        // 2 | setWindowSize | 1536x816 |
        driver.manage().window().setSize(new Dimension(1536, 816));
        // 3 | click | css=.globalnav-link-store > .globalnav-link-text-container |
        driver.findElement(By.cssSelector(".globalnav-link-store > .globalnav-link-text-container")).click();
        // 4 | click | css=div:nth-child(1) > .rf-cards-scroller-itemview > .rf-productnav-card img |
        driver.findElement(By.cssSelector("div:nth-child(1) > .rf-cards-scroller-itemview > .rf-productnav-card img")).click();
        // 5 | click | css=div:nth-child(1) > .rf-cards-scroller-itemview .rf-hcard-content-title |
        driver.findElement(By.cssSelector("div:nth-child(1) > .rf-cards-scroller-itemview .rf-hcard-content-title")).click();
        // 6 | assertText | xpath=//div[2]/div/div/div/div/div/div[2]/h2 | MacBook Air\n13-inch with M1 chip
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30000));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//h2[@id=\'rf-digitalmat-overlay-label\']")));
        }
        assertThat(driver.findElement(By.xpath("//h2[@id=\'rf-digitalmat-overlay-label\']")).getText(), is("MacBook Air\n13-inch with M1 chip"));
        // 7 | click | xpath=//div/div/div/div/div/div/div/div/div[2]/button |
        driver.findElement(By.xpath("//div/div/div/div/div/div/div/div/div[2]/button")).click();
        // 8 | assertText | xpath=//div[2]/div/div/div[2]/h2 | MacBook Air\n13-inch with M2 chip
        assertThat(driver.findElement(By.xpath("//div[2]/div/div/div[2]/h2")).getText(), is("MacBook Air\n13-inch with M2 chip"));
        // 9 | click | xpath=//div/div/div/div/div/div/div[3]/button |
        driver.findElement(By.xpath("//div/div/div/div/div/div/div[3]/button")).click();
        // 10 | assertText | xpath=//h2[contains(.,'MacBook Pro 13-inch')] | MacBook Pro 13-inch
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'MacBook Pro 13-inch\')]")).getText(), is("MacBook Pro 13-inch"));
        // 11 | click | xpath=//div/div/div[4]/button |
        driver.findElement(By.xpath("//div/div/div[4]/button")).click();
        // 12 | assertText | xpath=//h2[contains(.,'MacBook Pro 14-inch')] | MacBook Pro 14-inch
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'MacBook Pro 14-inch\')]")).getText(), is("MacBook Pro 14-inch"));
        // 13 | click | css=.rf-digitalmat-tabnav-scroller .paddlenav-arrow-next |
        driver.findElement(By.cssSelector(".rf-digitalmat-tabnav-scroller .paddlenav-arrow-next")).click();
        // 14 | click | xpath=//div[5]/button |
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30000));
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[5]/button")));
        }
        driver.findElement(By.xpath("//div[5]/button")).click();
        // 15 | assertText | xpath=//h2[contains(.,'iMac 24-inch')] | iMac 24-inch
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'iMac 24-inch\')]")).getText(), is("iMac 24-inch"));
        // 16 | click | xpath=//div[6]/button |
        Thread.sleep(500);
        driver.findElement(By.xpath("//div[6]/button")).click();
        // 17 | assertText | xpath=//h2[contains(.,'Mac mini')] | Mac mini
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'Mac mini\')]")).getText(), is("Mac mini"));
        // 18 | click | css=.rf-digitalmat-tabnav-scroller .paddlenav-arrow-next |
//        driver.findElement(By.cssSelector(".rf-digitalmat-tabnav-scroller .paddlenav-arrow-next")).click();
        driver.findElement(By.xpath("//div[3]/div/div/div/div/div/div/div/div[2]/button[2]")).click();
        // 19 | click | xpath=//div[7]/button |
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30000));
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[7]/button")));
        }
        Thread.sleep(500);
//        driver.findElement(By.cssSelector(".rf-digitalmat-tabnav-scroller .paddlenav-arrow-next")).click();
        driver.findElement(By.xpath("//div[7]/button")).click();

        // 20 | assertText | xpath=//h2[contains(.,'Mac Studio')] | Mac Studio
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'Mac Studio\')]")).getText(), is("Mac Studio"));
        // 21 | click | xpath=//div[8]/button |
        driver.findElement(By.xpath("//div[8]/button")).click();
        // 22 | assertText | xpath=//h2[contains(.,'Studio Display')] | Studio Display
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'Studio Display\')]")).getText(), is("Studio Display"));
        // 23 | click | xpath=//div[9]/button |
        driver.findElement(By.xpath("//div[9]/button")).click();
        // 24 | assertText | xpath=//h2[contains(.,'Mac Pro')] | Mac Pro
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'Mac Pro\')]")).getText(), is("Mac Pro"));
        // 25 | click | css=.rf-digitalmat-tabnav-scroller .paddlenav-arrow-next |
        driver.findElement(By.cssSelector(".rf-digitalmat-tabnav-scroller .paddlenav-arrow-next")).click();
        // 26 | click | xpath=//div[10]/button |
        driver.findElement(By.xpath("//div[10]/button")).click();
        // 27 | assertText | xpath=//h2[contains(.,'Pro Display XDR')] | Pro Display XDR
        assertThat(driver.findElement(By.xpath("//h2[contains(.,\'Pro Display XDR\')]")).getText(), is("Pro Display XDR"));
    }

    @Test
    public void searchBadWord() {
        driver.get("https://www.apple.com/");
        driver.manage().window().setSize(new Dimension(1536, 816));
        driver.findElement(By.xpath("//a[contains(@href, \'/us/search\')]")).click();
        driver.findElement(By.xpath("//input")).sendKeys("porn");
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30000));
            wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".globalnav-searchfield-submit")));
        }
        driver.findElement(By.cssSelector(".globalnav-searchfield-submit")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(3000));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[3]/div/div[2]/div/div/div/div[2]")));
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//div[3]/div/div[2]/div/div/div/div[2]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//h2[contains(.,\'Search Products and Accessories\')]"));
            assert (elements.size() == 0);
        }
    }

    @Test
    public void searchIphone() {
        // Test name: searchIphone
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://www.apple.com/");
        // 2 | setWindowSize | 1536x816 |
        driver.manage().window().setSize(new Dimension(1536, 816));
        // 3 | click | id=globalnav-menubutton-link-search |
        driver.findElement(By.id("globalnav-menubutton-link-search")).click();
        // 4 | type | xpath=//input | Iphone
        driver.findElement(By.xpath("//input")).sendKeys("Iphone");
        // 5 | sendKeys | xpath=//input | ${KEY_ENTER}
        driver.findElement(By.xpath("//input")).sendKeys(Keys.ENTER);
    }

    @Test
    public void searchRandomLetters() {
        // Test name: searchRandomLetters
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://www.apple.com/");
        // 2 | setWindowSize | 1536x816 |
        driver.manage().window().setSize(new Dimension(1536, 816));
        // 3 | click | xpath=//nav/div/ul/li[3]/a |
        driver.findElement(By.xpath("//nav/div/ul/li[3]/a")).click();
        // 4 | type | xpath=//div[@id='globalnav-submenu-search']/div/div/form/div/input | ;glksdjfglmsdgdjfkl;gjodfsngl;ksdfnglkndfskgn
        driver.findElement(By.xpath("//div[@id=\'globalnav-submenu-search\']/div/div/form/div/input")).sendKeys(";glksdjfglmsdgdjfkl;gjodfsngl;ksdfnglkndfskgn");
        // 5 | click | xpath=//div[@id='globalnav-submenu-search']/div/div/form/div/button[2] |
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(30000));
            wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".globalnav-searchfield-submit")));
        }
        driver.findElement(By.cssSelector(".globalnav-searchfield-submit")).click();
        // 6 | assertElementPresent | xpath=//h2[contains(.,'Search Products and Accessories')] |
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofMillis(3000));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//h2[contains(.,\'Search Products and Accessories\')]")));
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//h2[contains(.,\'Search Products and Accessories\')]"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void addMacBootToShoppingCardAndChangeAmount() {
        driver.get("https://www.apple.com/shop/buy-mac/macbook-air/13-inch-space-gray-apple-m1-chip-with-8-core-cpu-and-7-core-gpu-256gb");
        driver.manage().window().setSize(new Dimension(1536, 816));
        driver.findElement(By.name("add-to-cart")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]"), "1"));
        }
        assertThat(driver.findElement(By.xpath("//*[@id=\"globalnav-bag\"]/div[1]/span/span[2]")).getText(), is("1"));
        driver.findElement(By.name("proceed")).click();
        {
            List<WebElement> elements = driver.findElements(By.linkText("13-inch MacBook Air with M1 chip - Space Gray"));
            assert (elements.size() > 0);
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).clickAndHold().perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).release().perform();
        }
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$999.00"));
        driver.findElement(By.xpath("//div[@id=\'bag-content\']/ol/li/div/div[2]/div/div[2]/div/div/div/select")).click();
        {
            WebElement dropdown = driver.findElement(By.xpath("//div[@id=\'bag-content\']/ol/li/div/div[2]/div/div[2]/div/div/div/select"));
            dropdown.findElement(By.xpath("//option[. = '2']")).click();
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-summary-total > .rs-summary-value"), "$1,998.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$1,998.00"));
        driver.findElement(By.xpath("//div[@id=\'bag-content\']/ol/li/div/div[2]/div/div[2]/div/div/div/select")).click();
        {
            WebElement dropdown = driver.findElement(By.xpath("//div[@id=\'bag-content\']/ol/li/div/div[2]/div/div[2]/div/div/div/select"));
            dropdown.findElement(By.xpath("//option[. = '9']")).click();
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-summary-total > .rs-summary-value"), "$8,991.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-summary-total > .rs-summary-value")).getText(), is("$8,991.00"));
        driver.findElement(By.xpath("//div[4]/div[2]/div/div[2]/div/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rs-bag-header"), "Your bag is empty."));
        }
        assertThat(driver.findElement(By.cssSelector(".rs-bag-header")).getText(), is("Your bag is empty."));
    }

    @Test
    public void languageChange() {
        // Test name: languageChange
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://www.apple.com/");
        // 2 | setWindowSize | 1526x816 |
        driver.manage().window().setSize(new Dimension(1526, 816));
        // 3 | click | linkText=United States |
        driver.findElement(By.linkText("United States")).click();
        // 4 | click | xpath=//span[contains(.,'Bahrain')] |
        driver.findElement(By.xpath("//span[contains(.,\'Bahrain\')]")).click();
        // 5 | click | id=ac-globalfooter |
        driver.findElement(By.id("ac-globalfooter")).click();
        // 6 | assertText | linkText=Bahrain | Bahrain
        assertThat(driver.findElement(By.linkText("Bahrain")).getText(), is("Bahrain"));
    }

    @Test
    public void macBookColorChange() {
        driver.get("https://www.apple.com/store");
        driver.manage().window().setSize(new Dimension(1552, 832));
        driver.findElement(By.xpath("//div/div/div/div/div/div/div/div/div/div/img")).click();
        driver.findElement(By.xpath("//div/div/div/div/div/div/div/button")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//img[@alt=\'Top view of MacBook Air models in three finishes: Gold, Silver, and Space Gray.\']")));
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Top view of MacBook Air models in three finishes: Gold, Silver, and Space Gray.\']"));
            assert (elements.size() > 0);
        }
        driver.findElement(By.xpath("//div/div/div[3]/button[2]")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Front view of the high-contrast Retina display.\']"));
            assert (elements.size() > 0);
        }
        driver.findElement(By.xpath("//div/div/div[3]/button[2]")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Side view of the two Thunderbolt ports on the left side.\']"));
            assert (elements.size() > 0);
        }
        driver.findElement(By.xpath("//div/div/div[3]/button[2]")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Overhead view of the keyboard with integrated trackpad.\']"));
            assert (elements.size() > 0);
        }
        driver.findElement(By.xpath("//div/div/div[3]/button[2]")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Top view of the closed silver MacBook Air with the Apple logo in the center.\']"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void mackBookConfigurationChange() {
        driver.get("https://www.apple.com/");
        driver.manage().window().setSize(new Dimension(1552, 832));
        driver.findElement(By.xpath("//span[contains(.,\'Store\')]")).click();
        driver.findElement(By.xpath("//div/div/div/div/div/div/div/div/div/div/img")).click();
        driver.findElement(By.xpath("//div[2]/div/div/div/div/div/div/div/div[3]/div/a")).click();
        driver.findElement(By.xpath("//div[3]/form/div/button")).click();
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$999.00"));
        press(By.xpath("//div[2]/label/span/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,199.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,199.00"));
        press(By.xpath("//div[2]/div/div[2]/label/span/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,399.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,399.00"));
        press(By.xpath("//div[3]/label"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,599.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,599.00"));
        press(By.xpath("//div[4]/label/span/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,999.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,999.00"));
        press(By.xpath("//div[2]/div/div/div[2]/label/span/span[2]/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$2,298.99"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$2,298.99"));
        press(By.xpath("//div[2]/div[2]/div/div[2]/label"));
        press(By.xpath("//div[4]/div/div[2]/div/div/div"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$2,498.98"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$2,498.98"));
        press(By.xpath("//div[2]/div[2]/div/div/label/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$2,298.99"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$2,298.99"));
        press(By.xpath("//div[2]/div/div/div/label/span/span[2]/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,999.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,999.00"));
        press(By.xpath("//div[2]/div/div/label/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$1,199.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$1,199.00"));
        press(By.xpath("//span/span/span"));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(3));
            wait.until(ExpectedConditions.textToBe(By.cssSelector(".rc-prices-fullprice"), "$999.00"));
        }
        assertThat(driver.findElement(By.cssSelector(".rc-prices-fullprice")).getText(), is("$999.00"));
    }

    void press(By by) {
        WebElement ele = driver.findElement(by);
        JavascriptExecutor executor = (JavascriptExecutor) driver;
        executor.executeScript("arguments[0].click();", ele);
    }
}
